import{p as M}from"./vendor-state-BPg30LFv.js";import{d as g,j as ee}from"./vendor-react-BTyBZpW5.js";import{A as c}from"./vendor-pixi-CYWrwCRv.js";import{S as Y,d as se,L as te,c as y,C,R,U as O,e as H,f as F,h as k,i as Z,g as ae,l as re,j as ne,m as oe,G as P,n as N}from"./game-components-DdocDrSi.js";import{i as X,d as U,f as z,e as E,g as W,h as le,j as ie}from"./game-entities-BOCq0_W8.js";import{i as u}from"./vendor-i18n-QAcnuH6y.js";import{v as J}from"./vendor-utils-BKrj-4V8.js";import{h as b}from"./vendor-audio-DRxsz9bm.js";const xe=g()(M(s=>({menu:"main",change:a=>s({menu:a}),reset:()=>s({menu:"main"})}),{name:"menuStore"})),he=g()(M(s=>({global:"menu",change:a=>s({global:a}),storyShown:!1,setStoryShown:a=>s({storyShown:a})}),{name:"global-storage",partialize:s=>({storyShown:s.storyShown})})),Ie=g()(M((s,a)=>({volume:.5,volumeChange:e=>{const t=e==="up"?Math.min(a().volume+.1,1):Math.max(a().volume-.1,0);s({volume:parseFloat(t.toFixed(1))})}}),{name:"volume"})),ce={1:{id:"1",completed:!1,unlocked:!0,attempts:0}},V=JSON.parse(JSON.stringify(ce)),me=g()(M(s=>({levels:JSON.parse(JSON.stringify(V)),completeLevel:(a,e,t,n)=>s(i=>{const o=i.levels[a],r={...o,attempts:n,completed:!0,bestTime:o.bestTime?Math.min(o.bestTime,e):e,stars:t},m=`${parseInt(a)+1}`,d=i.levels[m];return{levels:{...i.levels,[a]:r,...d?{[m]:{...d,unlocked:!0}}:{}}}}),unlockLevel:a=>s(e=>({levels:{...e.levels,[a]:{...e.levels[a],unlocked:!0}}})),resetProgress:()=>s(()=>({levels:JSON.parse(JSON.stringify(V))}))}),{name:"levelsStore"})),w=g(s=>({visible:!1,message:null,show:(a,e=2e3)=>{s({message:a,visible:!0}),setTimeout(()=>{s({visible:!1,message:null})},e)}})),I=g()((s,a)=>({music:"music0",setMusic:e=>{b.Howler.stop(),s({music:e});const t=Y.find(i=>i.key===e),n=t?u.t(`translations:${t.label}`):"???";e!=="music0"?(j[e]?.play(),w.getState().show(`${u.t("translations:currentlyPlaying")}: ${n}`)):(a().offMusic(),w.getState().show(u.t("translations:musicIsDisabled")))},changeMusic:()=>{b.Howler.stop();const n="music"+(parseInt(a().music.replace(/\D+/g,""))+1)%(se+1);if(s({music:n}),n!=="music0"){j[n]?.play();const i=Y.find(r=>r.key===n),o=i?u.t(`translations:${i.label}`):"???";w.getState().show(`${u.t("translations:currentlyPlaying")}: ${o}`)}else w.getState().show(u.t("translations:musicIsDisabled"))},playMusic:()=>{const e=j[a().music];e&&e.play()},offMusic:()=>{b.Howler.stop()}})),j={win:new b.Howl({src:["assets/sounds/win.mp3"]}),portal:new b.Howl({src:["assets/sounds/portal.mp3"]}),music0:new b.Howl({src:["assets/sounds/music0.mp3"],onend:()=>{I.getState().changeMusic()}}),music1:new b.Howl({src:["assets/sounds/music1.mp3"],onend:()=>{I.getState().changeMusic()}}),music2:new b.Howl({src:["assets/sounds/music2.mp3"],onend:()=>{I.getState().changeMusic()}}),music3:new b.Howl({src:["assets/sounds/music3.mp3"],onend:()=>{I.getState().changeMusic()}}),music4:new b.Howl({src:["assets/sounds/music4.mp3"],onend:()=>{I.getState().changeMusic(),I.getState().changeMusic()}})},ue=g(s=>({content:null,open:a=>{B.getState().setStatus("modalOpen"),s({content:a})},close:()=>{B.getState().setStatus("playing"),s({content:null})}})),pe={lose:()=>ue.getState().open(ee.jsx(te,{}))},G=g()(M((s,a)=>({items:[...X],getItem:e=>a().items.find(t=>t.id===e)??null,hasAllButterflies:()=>[3,4,9,10].every(t=>{const n=a().getItem(t);return n&&n.amount>0}),doAction:e=>{const t=a().getItem(e);t&&U.find(n=>n.id===t.id)?.action()},removeItem:e=>{s(t=>({items:t.items.filter(n=>n.id!==e)}))},removeMiniGameItems:()=>{a().removeItem(2),a().removeItem(8)},addItem:e=>{const t=u.t(`translations:items.names.${e}`),n=u.t("translations:items.pickedUp",{itemName:t});w.getState().show(n);const i=U.find(o=>o.id===e);i&&s(o=>o.items.find(m=>m.id===i.id)?{items:o.items.map(d=>d.id===i.id?{...d,amount:d.amount+1}:d)}:{items:[...o.items,{...i,amount:1}]})},reduceItem:e=>{a().getItem(e)&&s(n=>({items:n.items.map(o=>o.id===e?{...o,amount:Math.max(0,o.amount-1)}:o).filter(o=>o.amount>0)}))},reset:()=>{s({items:[...X]})}}),{name:"inventory-store"})),q=(s=10)=>{const a=new Set,e=[],t=Math.ceil(C*.05),n=Math.ceil(R*.05),i=t,o=C-t-1,r=n,m=R-n-1,{obstacles:d,items:f,decorations:l}=p.getState(),L=($,A)=>{const h=S=>S.some(x=>$<x.x+x.width&&$+y>x.x&&A<x.y+x.height&&A+y>x.y);return h(d)||h(f.map(S=>({...S,width:S.size.width,height:S.size.height})))||h(l)};let D=0;const Q=s*20;for(;e.length<s&&D<Q;){const $=Math.floor(Math.random()*(o-i+1))+i,A=Math.floor(Math.random()*(m-r+1))+r,h=$*y,S=A*y,x=`${h},${S}`;if(a.has(x)){D++;continue}if(L(h,S)){D++;continue}a.add(x),e.push({x:h,y:S})}return e},T=g()(M((s,a)=>({completed:{},currentMiniGame:null,lastLevel:"1",canInteract:!0,lastPosition:O,collected:0,carriedItem:null,deliveryZones:[],activeDeliveryZoneIndex:0,generateDeliveryZones:()=>{const e=q();s({deliveryZones:e,activeDeliveryZoneIndex:0})},generateFlowerZones:()=>{const e=a();if(!e.currentMiniGame)return;const t=z[e.currentMiniGame];if(t.id!=="spring")return;const n=q(),i=n.map(o=>({id:t.itemId,x:o.x,y:o.y,type:t.itemName+`${Math.ceil(Math.random()*12)}`,size:{width:24,height:24},visible:!0}));p.setState(o=>({items:[...o.items,...i]})),s({deliveryZones:n,activeDeliveryZoneIndex:0})},nextDeliveryZone:()=>{s(e=>({activeDeliveryZoneIndex:e.activeDeliveryZoneIndex+1}))},takeBoxFromShelf:()=>{const e=a();if(!e.currentMiniGame)return;const t=z[e.currentMiniGame];if(t.id!=="autumn")return;if(!e.canInteract){w.getState().show(u.t("translations:miniGame.allBoxesDelivered"));return}const n=G.getState();if(e.carriedItem===t.itemId){w.getState().show(u.t("translations:overload"));return}w.getState().show(u.t("translations:miniGame.takeBox")),n.addItem(t.itemId),s({carriedItem:t.itemId});const{deliveryZones:i,activeDeliveryZoneIndex:o}=a(),r=i[o];r&&p.getState().spawnEnemies([{x:r.x-12,y:r.y,axis:"y",type:"trap2",speed:180},{x:r.x+12,y:r.y,axis:"y",type:"trap2",speed:180},{x:r.x,y:r.y-12,axis:"x",type:"trap2",speed:180},{x:r.x,y:r.y+12,axis:"x",type:"trap2",speed:180}],r)},markCompleted:e=>s(t=>({completed:{...t.completed,[e]:!0}})),startMiniGame:e=>{if(!a().completed[e]){G.getState().removeMiniGameItems();const t=z[e];s({lastPosition:_.getState().position,lastLevel:B.getState().currentLevelID??"1",carriedItem:null,canInteract:!0,collected:0,deliveryZones:[],activeDeliveryZoneIndex:0}),e==="autumn"&&a().generateDeliveryZones(),p.getState().load(t.level,t.id).then(()=>{_.getState().setPosition(p.getState().playerStart),t.action&&t.action(),e==="spring"&&a().generateFlowerZones()}),s({currentMiniGame:e})}},clearCurrentMiniGame:()=>{s({currentMiniGame:null,collected:0,carriedItem:null,canInteract:!0,deliveryZones:[],activeDeliveryZoneIndex:0})},deliverItem:()=>{const e=a().currentMiniGame;if(!e)return;const t=z[e],n=a().carriedItem;if(n!==t.itemId){const r=u.t(`translations:items.names.${t.itemId}`);w.getState().show(u.t("translations:miniGame.noItem",{itemName:r}));return}if(!a().canInteract){w.getState().show(u.t("translations:miniGame.allFlowersDelivered"));return}const i=a().collected+1;G.getState().reduceItem(n),s({collected:i,carriedItem:null});const o=t.goal-i;w.getState().show(u.t("translations:miniGame.delivered",{itemName:u.t(`translations:items.names.${n}`),remaining:o})),e==="autumn"&&(p.getState().removeEnemies(),i<t.goal&&a().nextDeliveryZone()),i>=t.goal&&(s({canInteract:!1}),p.getState().removeEnemies(),p.setState(r=>({items:r.items.map(m=>m.id===t.butterflyId?{...m,visible:!0}:m)})))},finishMiniGame:()=>{const e=a().currentMiniGame;e&&(G.getState().removeMiniGameItems(),a().markCompleted(e),s({currentMiniGame:null,collected:0,carriedItem:null,canInteract:!0,deliveryZones:[],activeDeliveryZoneIndex:0})),B.setState({currentLevelID:a().lastLevel}),p.getState().load(a().lastLevel).then(()=>{_.setState({size:H}),_.getState().setPosition(a().lastPosition)})},isCompleted:e=>!!a().completed[e],resetMiniGames:()=>{s({currentMiniGame:null,lastLevel:"1",completed:{},lastPosition:O,collected:0,carriedItem:null,canInteract:!0,deliveryZones:[],activeDeliveryZoneIndex:0})}}),{name:"mini-game-store",partialize:s=>({completed:s.completed})})),B=g()((s,a)=>({currentLevelID:null,status:"paused",currentAttempts:1,curTime:0,stars:0,startLevel:e=>{Howler.stop(),I.getState().playMusic(),_.getState().setPosition(O),s(()=>({currentLevelID:e,status:"playing",currentAttempts:1,curTime:0,stars:0}))},pause:()=>{a().status==="playing"&&s(()=>({status:"paused"}))},setStatus:e=>{s({status:e})},resume:()=>s(()=>({status:"playing"})),enterDoor:e=>{const t=Number(a().currentLevelID);let n=t;e==="right"?n=t+1>4?1:t+1:e==="left"&&(n=t-1<1?4:t-1),p.getState().load(n.toString()).then(()=>{const i=`${u.t("translations:entered")} ${n}!`;w.getState().show(i),_.getState().setPosition(e==="right"?p.getState().playerStart:p.getState().playerEnd)}),s({currentLevelID:n.toString()})},getStar:()=>s(e=>({stars:e.stars+1})),win:()=>{const e=me.getState().completeLevel,t=a().currentLevelID;t&&(Howler.stop(),j.win.play(),e(t,a().curTime,a().stars,a().currentAttempts)),s(()=>({status:"won"}))},lose:()=>{const e=p.getState().load,t=a().currentLevelID;t&&e(t).then(()=>{_.getState().setPosition(p.getState().playerStart);const n=T.getState().currentMiniGame;if(n&&(G.getState().removeMiniGameItems(),T.setState({carriedItem:null})),n==="spring"){T.setState({collected:0,canInteract:!0});const i=p.getState().items.filter(o=>o.type!=="flower");p.setState({items:i}),T.getState().generateFlowerZones()}}),pe.lose(),s(n=>({currentAttempts:n.currentAttempts+1}))},reset:()=>{Howler.stop(),s(()=>({currentLevelID:null,status:"paused",currentAttempts:0,curTime:0,stars:0}))},tick:e=>s(t=>t.status==="playing"?{curTime:t.curTime+e}:t)})),p=g((s,a)=>({playerStart:{x:k.x,y:k.y},playerEnd:{x:F.x,y:F.y},levelType:"underworld",gravity:1500,items:[],decorations:[],spirits:[],obstacles:[],enemies:[],isMiniGame:!1,isLoaded:!1,load:async(e,t)=>{const n=t??_.getState().season,i=_.getState().textureString;i&&_.getState().setTexture(ae(i));const o=await re(e,n);Number(e)>4?(s({isMiniGame:!0}),_.setState({size:ne})):(s({isMiniGame:!1}),_.setState({size:H})),B.setState({currentLevelID:e}),E.length=0,(o.enemies||[]).map(l=>({...l,type:l.type==="dog"?l.type+"_"+o.levelType:l.type})).forEach(l=>{const L=J(),D=!l.type.startsWith("dog");W(L,l.x,l.y,l.x-l.range/2,l.x+l.range/2,l.speed,l.type,l.size,D)});const r=(o.obstacles||[]).map(l=>({...l,type:l.type==="platform"||l.type==="door"||l.type==="ladder"?l.type+"_"+o.levelType:l.type,visible:l.visible!==void 0?l.visible:!0})),m=(o.items||[]).map(l=>l.type==="flower"?{...l,type:l.type+`${Math.ceil(Math.random()*12)}`}:l.type==="box"?{...l,type:l.type+`${Math.ceil(Math.random()*3)}`}:{...l,visible:!G.getState().getItem(l.id)&&!T.getState().canInteract}),d=(o.decorations||[]).map(l=>{if(l.type.startsWith("fire"))return{...l,visible:!0};if(l.type.startsWith("tree"))return{...l,type:l.type+o.levelType,visible:!0};if(l.type==="moon"||l.type==="sun")return{...l,type:l.type,visible:!0}}),f=(o.spirits||[]).map(l=>({...l,visible:l.visible!==void 0?l.visible:!0}));s({levelType:o.levelType,playerStart:{x:o.playerStart.x,y:o.playerStart.y},playerEnd:{x:o.playerEnd.x,y:o.playerEnd.y},gravity:o.gravity,items:m,decorations:d,spirits:f,obstacles:r,enemies:E,isLoaded:!0})},spawnEnemies:(e,t,n)=>{const i=oe,o=96,r=n??200,m=t?{x:[Z(t.x-r,0,N-y),Z(t.x+r,0,N-y)],y:[Z(t.y-r,0,P-y),Z(t.y+r,0,P-y)]}:{},d={x:m.x?m.x:[0,N-y],y:m.y?m.y:[0,P-y]};for(const f of e){const[l,L]=d[f.axis];W(J(),f.x,f.y,l,L,f.speed??o,f.type??"trap2",f.size??i,f.isAngry??!0,f.axis)}s({enemies:[...E]})},removeEnemies:()=>{E.length=0,s({enemies:[]})},reset:()=>{E.length=0,s({playerStart:{x:a().playerStart.x,y:a().playerStart.y},playerEnd:{x:a().playerEnd.x,y:a().playerEnd.y},obstacles:[],spirits:[],items:[],enemies:[],isMiniGame:!1,isLoaded:!1})}})),_=g()(M((s,a)=>({name:"",texture:null,textureString:null,size:H,nearInteractive:[],position:k,velocityY:0,velocityX:0,onLadder:!1,speed:96,jumpPower:480,onGround:!0,stacked:{x:!1,y:!1},season:"underworld",id:1,init:(e,t,n,i,o,r,m,d)=>{s({name:e,position:k,velocityX:0,velocityY:0,nearInteractive:[],onLadder:!1,onGround:!0,stacked:{x:!1,y:!1},texture:t,textureString:n,size:r,speed:i,jumpPower:o,season:m,id:d})},change:()=>s({textureString:null}),setName:e=>s({name:e}),setPosition:e=>{const t=Math.min(N-y,Math.max(0,e.x)),n=Math.min(P-y,Math.max(0,e.y));s({position:{x:t,y:n}})},setOnGround:e=>s({onGround:e}),setVelocity:(e,t)=>{e==="y"?s({velocityY:t}):e==="x"&&s({velocityX:t})},setTexture:e=>s({texture:e}),setSeason:e=>{const t="player_";s(e==="underworld"?{textureString:t+e}:{textureString:t+a().id+"_"+e}),s({season:e})},setId:e=>s({id:e}),reset:()=>s({position:k,velocityY:0,velocityX:0,onGround:!0,stacked:{x:!1,y:!1},season:"underworld",id:1}),setOnLadder:e=>s({onLadder:e}),jump:()=>{const{onGround:e,jumpPower:t}=a();e&&s({velocityY:-t,onGround:!1})},come:e=>{const{speed:t}=a();switch(e){case"left":s({velocityX:-t});break;case"right":s({velocityX:t});break;case"up":s({velocityY:-t});break;case"down":s({velocityY:t});break}},tick:e=>{le();const t=ie(a().position,a().size,a().velocityX,a().velocityY,e,!0);s({stacked:t.stacked}),a().setPosition(t.position),s({nearInteractive:t.nearInteractive??[],velocityX:t.velocityX,velocityY:t.velocityY,onGround:t.onGround,onLadder:t.onLadder})}}),{name:"playerStore",partialize:s=>({name:s.name,size:s.size,textureString:s.textureString,velocityY:s.velocityY,velocityX:s.velocityX,speed:s.speed,jumpPower:s.jumpPower,onGround:s.onGround,position:{x:s.position.x,y:s.position.y},season:s.season,id:s.id}),merge:(s,a)=>{const e=s;return{...a,...e,position:e.position??k}}})),Me=g(s=>({interactionId:null,progress:0,startTime:null,targetId:null,startHold:a=>s({interactionId:a,progress:0,startTime:performance.now()}),updateProgress:a=>s({progress:a}),cancelHold:()=>s({interactionId:null,progress:0,startTime:null})})),v="/game-szns/",K=[v+"/backgrounds/1.png",v+"/backgrounds/2.png",v+"/backgrounds/3.png",v+"/backgrounds/4.png",v+"/backgrounds/5.png",v+"/backgrounds/6.png",v+"/backgrounds/7.png",v+"/backgrounds/8.png",v+"/backgrounds/9.png",v+"/backgrounds/10.png",v+"/backgrounds/11.png"],ke=g()((s,a)=>({background:"",setBackground:e=>s({background:e}),randomBackground:()=>{const e=K[Math.floor(Math.random()*K.length)];s({background:e})},resetBackground:()=>{a().randomBackground()}})),de={bundles:[{name:"bat",assets:[{alias:"bat",src:"assets/creatures/enemy/bat.png"}]},{name:"slug",assets:[{alias:"slug",src:"assets/creatures/enemy/slug.png"}]},{name:"underworld_spirit",assets:[{alias:"underworld_spirit",src:"assets/creatures/enemy/underworld_spirit.png"}]},{name:"dog_autumn",assets:[{alias:"dog_autumn",src:"assets/creatures/dog/dog_autumn.png"}]},{name:"dog_winter",assets:[{alias:"dog_winter",src:"assets/creatures/dog/dog_winter.png"}]},{name:"dog_summer",assets:[{alias:"dog_summer",src:"assets/creatures/dog/dog_summer.png"}]},{name:"dog_spring",assets:[{alias:"dog_spring",src:"assets/creatures/dog/dog_spring.png"}]},{name:"tablet",assets:[{alias:"tablet",src:"assets/obstacles/tablet.png"}]},{name:"flower1",assets:[{alias:"flower1",src:"assets/obstacles/flowers/flower1.png"}]},{name:"flower2",assets:[{alias:"flower2",src:"assets/obstacles/flowers/flower2.png"}]},{name:"flower3",assets:[{alias:"flower3",src:"assets/obstacles/flowers/flower3.png"}]},{name:"flower4",assets:[{alias:"flower4",src:"assets/obstacles/flowers/flower4.png"}]},{name:"flower5",assets:[{alias:"flower5",src:"assets/obstacles/flowers/flower5.png"}]},{name:"flower6",assets:[{alias:"flower6",src:"assets/obstacles/flowers/flower6.png"}]},{name:"flower7",assets:[{alias:"flower7",src:"assets/obstacles/flowers/flower7.png"}]},{name:"flower8",assets:[{alias:"flower8",src:"assets/obstacles/flowers/flower8.png"}]},{name:"flower9",assets:[{alias:"flower9",src:"assets/obstacles/flowers/flower9.png"}]},{name:"flower10",assets:[{alias:"flower10",src:"assets/obstacles/flowers/flower10.png"}]},{name:"flower11",assets:[{alias:"flower11",src:"assets/obstacles/flowers/flower11.png"}]},{name:"flower12",assets:[{alias:"flower12",src:"assets/obstacles/flowers/flower12.png"}]},{name:"bag",assets:[{alias:"bag",src:"assets/obstacles/bag.png"}]},{name:"shelf",assets:[{alias:"shelf",src:"assets/obstacles/shelf.png"}]},{name:"box1",assets:[{alias:"box1",src:"assets/obstacles/boxes/box1.png"}]},{name:"box2",assets:[{alias:"box2",src:"assets/obstacles/boxes/box2.png"}]},{name:"box3",assets:[{alias:"box3",src:"assets/obstacles/boxes/box3.png"}]},{name:"box_zone",assets:[{alias:"box_zone",src:"assets/obstacles/boxes/box_zone.png"}]},{name:"item_winter",assets:[{alias:"item_winter",src:"assets/items/item_winter.png"}]},{name:"item_spring",assets:[{alias:"item_spring",src:"assets/items/item_spring.png"}]},{name:"item_summer",assets:[{alias:"item_summer",src:"assets/items/item_summer.png"}]},{name:"item_autumn",assets:[{alias:"item_autumn",src:"assets/items/item_autumn.png"}]},{name:"portal",assets:[{alias:"portal",src:"assets/items/portal.png"}]},{name:"door_underworld",assets:[{alias:"door_underworld",src:"assets/obstacles/door/door_underworld.png"}]},{name:"door_winter",assets:[{alias:"door_winter",src:"assets/obstacles/door/door_winter.png"}]},{name:"door_summer",assets:[{alias:"door_summer",src:"assets/obstacles/door/door_summer.png"}]},{name:"door_spring",assets:[{alias:"door_spring",src:"assets/obstacles/door/door_spring.png"}]},{name:"door_autumn",assets:[{alias:"door_autumn",src:"assets/obstacles/door/door_autumn.png"}]},{name:"ladder_underworld",assets:[{alias:"ladder_underworld",src:"assets/obstacles/ladder/ladder_underworld.png"}]},{name:"ladder_winter",assets:[{alias:"ladder_winter",src:"assets/obstacles/ladder/ladder_winter.png"}]},{name:"ladder_summer",assets:[{alias:"ladder_summer",src:"assets/obstacles/ladder/ladder_summer.png"}]},{name:"ladder_spring",assets:[{alias:"ladder_spring",src:"assets/obstacles/ladder/ladder_spring.png"}]},{name:"ladder_autumn",assets:[{alias:"ladder_autumn",src:"assets/obstacles/ladder/ladder_autumn.png"}]},{name:"fountain",assets:[{alias:"fountain",src:"assets/obstacles/fountain.png"}]},{name:"player_underworld",assets:[{alias:"player_underworld",src:"assets/player/spritesheet/player_underworld.png"}]},{name:"player_1_winter",assets:[{alias:"player_1_winter",src:"assets/player/spritesheet/player_1_winter.png"}]},{name:"player_1_summer",assets:[{alias:"player_1_summer",src:"assets/player/spritesheet/player_1_summer.png"}]},{name:"player_1_spring",assets:[{alias:"player_1_spring",src:"assets/player/spritesheet/player_1_spring.png"}]},{name:"player_1_autumn",assets:[{alias:"player_1_autumn",src:"assets/player/spritesheet/player_1_autumn.png"}]},{name:"player_2_winter",assets:[{alias:"player_2_winter",src:"assets/player/spritesheet/player_2_winter.png"}]},{name:"player_2_summer",assets:[{alias:"player_2_summer",src:"assets/player/spritesheet/player_2_summer.png"}]},{name:"player_2_spring",assets:[{alias:"player_2_spring",src:"assets/player/spritesheet/player_2_spring.png"}]},{name:"player_2_autumn",assets:[{alias:"player_2_autumn",src:"assets/player/spritesheet/player_2_autumn.png"}]},{name:"player_3_winter",assets:[{alias:"player_3_winter",src:"assets/player/spritesheet/player_3_winter.png"}]},{name:"player_3_summer",assets:[{alias:"player_3_summer",src:"assets/player/spritesheet/player_3_summer.png"}]},{name:"player_3_spring",assets:[{alias:"player_3_spring",src:"assets/player/spritesheet/player_3_spring.png"}]},{name:"player_3_autumn",assets:[{alias:"player_3_autumn",src:"assets/player/spritesheet/player_3_autumn.png"}]},{name:"spirit_laurus",assets:[{alias:"spirit_laurus",src:"assets/spirit/spirit_laurus.png"}]},{name:"spirit_mira",assets:[{alias:"spirit_mira",src:"assets/spirit/spirit_mira.png"}]},{name:"spirit_onyx",assets:[{alias:"spirit_onyx",src:"assets/spirit/spirit_onyx.png"}]},{name:"spirit_swifty",assets:[{alias:"spirit_swifty",src:"assets/spirit/spirit_swifty.png"}]},{name:"platform_underworld",assets:[{alias:"platform_underworld",src:"assets/obstacles/platform/default/platform_underworld.png"}]},{name:"platform_winter",assets:[{alias:"platform_winter",src:"assets/obstacles/platform/default/platform_winter.png"}]},{name:"platform_summer",assets:[{alias:"platform_summer",src:"assets/obstacles/platform/default/platform_summer.png"}]},{name:"platform_spring",assets:[{alias:"platform_spring",src:"assets/obstacles/platform/default/platform_spring.png"}]},{name:"platform_autumn",assets:[{alias:"platform_autumn",src:"assets/obstacles/platform/default/platform_autumn.png"}]},{name:"platform_games_winter",assets:[{alias:"platform_games_winter",src:"assets/obstacles/platform/games/platform_winter.png"}]},{name:"platform_games_summer",assets:[{alias:"platform_games_summer",src:"assets/obstacles/platform/games/platform_summer.png"}]},{name:"platform_games_spring",assets:[{alias:"platform_games_spring",src:"assets/obstacles/platform/games/platform_spring.png"}]},{name:"platform_games_autumn",assets:[{alias:"platform_games_autumn",src:"assets/obstacles/platform/games/platform_autumn.png"}]},{name:"cloud1",assets:[{alias:"cloud1",src:"assets/clouds/cloud1.png"}]},{name:"cloud2",assets:[{alias:"cloud2",src:"assets/clouds/cloud2.png"}]},{name:"cloud3",assets:[{alias:"cloud3",src:"assets/clouds/cloud3.png"}]},{name:"cloud4",assets:[{alias:"cloud4",src:"assets/clouds/cloud4.png"}]},{name:"cloud5",assets:[{alias:"cloud5",src:"assets/clouds/cloud5.png"}]},{name:"cloud6",assets:[{alias:"cloud6",src:"assets/clouds/cloud6.png"}]},{name:"cloud7",assets:[{alias:"cloud7",src:"assets/clouds/cloud7.png"}]},{name:"snow",assets:[{alias:"snow",src:"assets/effects/snow.png"}]},{name:"fog",assets:[{alias:"fog",src:"assets/effects/fog.png"}]},{name:"rain",assets:[{alias:"rain",src:"assets/effects/rain.png"}]},{name:"fire",assets:[{alias:"fire",src:"assets/fire/fire.png"}]},{name:"tree1winter",assets:[{alias:"tree1winter",src:"assets/obstacles/trees/tree1winter.png"}]},{name:"tree2winter",assets:[{alias:"tree2winter",src:"assets/obstacles/trees/tree2winter.png"}]},{name:"tree3winter",assets:[{alias:"tree3winter",src:"assets/obstacles/trees/tree3winter.png"}]},{name:"tree1summer",assets:[{alias:"tree1summer",src:"assets/obstacles/trees/tree1summer.png"}]},{name:"tree2summer",assets:[{alias:"tree2summer",src:"assets/obstacles/trees/tree2summer.png"}]},{name:"tree3summer",assets:[{alias:"tree3summer",src:"assets/obstacles/trees/tree3summer.png"}]},{name:"tree1spring",assets:[{alias:"tree1spring",src:"assets/obstacles/trees/tree1spring.png"}]},{name:"tree2spring",assets:[{alias:"tree2spring",src:"assets/obstacles/trees/tree2spring.png"}]},{name:"tree3spring",assets:[{alias:"tree3spring",src:"assets/obstacles/trees/tree3spring.png"}]},{name:"tree1autumn",assets:[{alias:"tree1autumn",src:"assets/obstacles/trees/tree1autumn.png"}]},{name:"tree2autumn",assets:[{alias:"tree2autumn",src:"assets/obstacles/trees/tree2autumn.png"}]},{name:"tree3autumn",assets:[{alias:"tree3autumn",src:"assets/obstacles/trees/tree3autumn.png"}]},{name:"moon",assets:[{alias:"moon",src:"assets/obstacles/decoration/moon.png"}]},{name:"sun",assets:[{alias:"sun",src:"assets/obstacles/decoration/sun.png"}]},{name:"trap1",assets:[{alias:"trap1",src:"assets/obstacles/traps/trap1.png"}]},{name:"trap2",assets:[{alias:"trap2",src:"assets/obstacles/traps/trap2.png"}]},{name:"trap3",assets:[{alias:"trap3",src:"assets/obstacles/traps/trap3.png"}]},{name:"ice",assets:[{alias:"ice",src:"assets/obstacles/platform/ice.png"}]},{name:"water",assets:[{alias:"water",src:"assets/obstacles/platform/water.png"}]},{name:"water_games",assets:[{alias:"water_games",src:"assets/obstacles/platform/water_games.png"}]},{name:"rock1",assets:[{alias:"rock1",src:"assets/obstacles/rock/rock1.png"}]},{name:"rock2",assets:[{alias:"rock2",src:"assets/obstacles/rock/rock2.png"}]},{name:"rock3",assets:[{alias:"rock3",src:"assets/obstacles/rock/rock3.png"}]},{name:"snowman",assets:[{alias:"snowman",src:"assets/creatures/snowman.png"}]},{name:"jewel_autumn",assets:[{alias:"jewel_autumn",src:"assets/jewels/jewel_autumn.png"}]},{name:"jewel_summer",assets:[{alias:"jewel_summer",src:"assets/jewels/jewel_summer.png"}]},{name:"jewel_winter",assets:[{alias:"jewel_winter",src:"assets/jewels/jewel_winter.png"}]},{name:"jewel_spring",assets:[{alias:"jewel_spring",src:"assets/jewels/jewel_spring.png"}]}]},Ge=g()((s,a)=>({isInitialized:!1,initialize:async()=>{if(!a().isInitialized)try{await c.init({manifest:de});const e=["winter","summer","autumn","spring"];await c.loadBundle("player_underworld");for(let r=1;r<=3;r++)for(const m of e)await c.loadBundle(`player_${r}_${m}`);const t=["laurus","mira","onyx","swifty"];for(const r of t)await c.loadBundle(`spirit_${r}`);for(const r of e)await c.loadBundle(`item_${r}`),await c.loadBundle(`dog_${r}`),await c.loadBundle(`platform_games_${r}`),await c.loadBundle(`jewel_${r}`);for(const r of[...e,"underworld"])await c.loadBundle(`door_${r}`),await c.loadBundle(`ladder_${r}`),await c.loadBundle(`platform_${r}`);for(let r=1;r<=3;r++)for(const m of e)await c.loadBundle(`tree${r}${m}`);for(let r=1;r<=3;r++)await c.loadBundle(`trap${r}`),await c.loadBundle(`box${r}`),await c.loadBundle(`rock${r}`);const n=["fountain","portal","fire","sun","moon","snowman"];for(const r of n)await c.loadBundle(r);for(let r=1;r<=12;r++)await c.loadBundle(`flower${r}`);await c.loadBundle("bag"),await c.loadBundle("shelf"),await c.loadBundle("box_zone"),await c.loadBundle("tablet"),await c.loadBundle("water_games"),await c.loadBundle("water"),await c.loadBundle("ice");for(let r=1;r<=7;r++)await c.loadBundle(`cloud${r}`);const i=["snow","rain","fog"];for(const r of i)await c.loadBundle(r);const o=["slug","bat","underworld_spirit"];for(const r of o)await c.loadBundle(r);s({isInitialized:!0})}catch(e){throw console.error("Assets initialization failed:",e),e}}}));export{he as a,Ie as b,ue as c,I as d,_ as e,T as f,G as g,me as h,Me as i,B as j,p as k,ke as l,w as m,Ge as n,xe as u};
